{"ast":null,"code":"var _jsxFileName = \"/home/crw/Programming/Dianoia/frontend/src/components/ArgumentCanvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport ReactFlow, { ReactFlowProvider, Controls, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { useStore } from '../store/useStore';\nimport ArgumentNode from './ArgumentNode';\nimport InteractionPanel from './InteractionPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  argumentNode: ArgumentNode\n};\nexport default function ArgumentCanvas() {\n  _s();\n  const {\n    nodes,\n    edges,\n    selectedNode,\n    setNodes,\n    setEdges,\n    loadFromLocalStorage\n  } = useStore();\n\n  // Load saved data on mount\n  useEffect(() => {\n    loadFromLocalStorage();\n  }, [loadFromLocalStorage]);\n  const onNodesChange = useCallback(changes => {\n    const updatedNodes = changes.reduce((acc, change) => {\n      if (change.type === 'position' && change.position) {\n        const nodeIndex = acc.findIndex(n => n.id === change.id);\n        if (nodeIndex !== -1) {\n          acc[nodeIndex] = {\n            ...acc[nodeIndex],\n            position: change.position\n          };\n        }\n      }\n      return acc;\n    }, [...nodes]);\n    setNodes(updatedNodes);\n  }, [nodes, setNodes]);\n  const onEdgesChange = useCallback(changes => {\n    // For now, we don't allow edge changes in the MVP\n    // This can be extended later for manual edge creation\n  }, [setEdges]);\n  const onConnect = useCallback(params => {\n    // For now, we don't allow manual connections in the MVP\n    // All connections are created automatically when generating arguments\n  }, [setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full relative\",\n    children: [/*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        attributionPosition: \"bottom-left\",\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(InteractionPanel, {\n      selectedNode: selectedNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(ArgumentCanvas, \"X07oggbdxx0BiXYQjnJDCvaBLhM=\", false, function () {\n  return [useStore];\n});\n_c = ArgumentCanvas;\nvar _c;\n$RefreshReg$(_c, \"ArgumentCanvas\");","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","ReactFlowProvider","Controls","Background","useStore","ArgumentNode","InteractionPanel","jsxDEV","_jsxDEV","nodeTypes","argumentNode","ArgumentCanvas","_s","nodes","edges","selectedNode","setNodes","setEdges","loadFromLocalStorage","onNodesChange","changes","updatedNodes","reduce","acc","change","type","position","nodeIndex","findIndex","n","id","onEdgesChange","onConnect","params","className","children","fitView","attributionPosition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/crw/Programming/Dianoia/frontend/src/components/ArgumentCanvas.tsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport ReactFlow, {\n    Node,\n    Edge,\n    NodeChange,\n    EdgeChange,\n    Connection,\n    addEdge,\n    useNodesState,\n    useEdgesState,\n    ReactFlowProvider,\n    Controls,\n    Background,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { useStore } from '../store/useStore';\nimport ArgumentNode from './ArgumentNode';\nimport InteractionPanel from './InteractionPanel';\n\nconst nodeTypes = {\n    argumentNode: ArgumentNode,\n};\n\nexport default function ArgumentCanvas() {\n    const {\n        nodes,\n        edges,\n        selectedNode,\n        setNodes,\n        setEdges,\n        loadFromLocalStorage\n    } = useStore();\n\n    // Load saved data on mount\n    useEffect(() => {\n        loadFromLocalStorage();\n    }, [loadFromLocalStorage]);\n\n    const onNodesChange = useCallback(\n        (changes: NodeChange[]) => {\n            const updatedNodes = changes.reduce((acc, change) => {\n                if (change.type === 'position' && change.position) {\n                    const nodeIndex = acc.findIndex(n => n.id === change.id);\n                    if (nodeIndex !== -1) {\n                        acc[nodeIndex] = { ...acc[nodeIndex], position: change.position };\n                    }\n                }\n                return acc;\n            }, [...nodes]);\n            setNodes(updatedNodes);\n        },\n        [nodes, setNodes]\n    );\n\n    const onEdgesChange = useCallback(\n        (changes: EdgeChange[]) => {\n            // For now, we don't allow edge changes in the MVP\n            // This can be extended later for manual edge creation\n        },\n        [setEdges]\n    );\n\n    const onConnect = useCallback(\n        (params: Connection) => {\n            // For now, we don't allow manual connections in the MVP\n            // All connections are created automatically when generating arguments\n        },\n        [setEdges]\n    );\n\n    return (\n        <div className=\"w-full h-full relative\">\n            <ReactFlowProvider>\n                <ReactFlow\n                    nodes={nodes}\n                    edges={edges}\n                    onNodesChange={onNodesChange}\n                    onEdgesChange={onEdgesChange}\n                    onConnect={onConnect}\n                    nodeTypes={nodeTypes}\n                    fitView\n                    attributionPosition=\"bottom-left\"\n                >\n                    <Controls />\n                    <Background />\n                </ReactFlow>\n            </ReactFlowProvider>\n\n            {selectedNode && (\n                <InteractionPanel selectedNode={selectedNode} />\n            )}\n        </div>\n    );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}